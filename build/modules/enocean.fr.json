{"idModule":"111","name":"EnOcean","description":"Modules Gladys pour controller ses équipements sans fil du protocole enOcean.","slug":"enocean","createdAt":"2017-11-16 18:30:43","Developer":"Andro","version":"0.0.1","instructionsHTML":"<h2>Installation</h2>\n<ul>\n<li>Brancher votre clé USB EnOcean (TCM300) sur votre Raspberry Pi</li>\n<li>Trouver le périphérique en question sur votre distribution linux (cela doit être du type <code>/dev/ttyACM0</code>, vous pouvez le renommer via les règles udev).<br />\nEssayez de lancer la commande suivante <code>ls /dev/tty*</code> avant de le brancher, puis après l'avoir branché et vous devriez voir le périphérique apparaitre.</li>\n<li>\n<p>Créez un parametre dans Gladys en allant dans &quot;Parametres&quot; =&gt; &quot;Parametres&quot; :<br />\n<strong>Clé</strong> : enocean_usb_port<br />\n<strong>Valeur</strong> : NOM_DU_PORT_TROUVE </p>\n</li>\n<li>Installer le module dans Gladys par le store.</li>\n<li>Reboot Gladys</li>\n</ul>\n<h2>Usage</h2>\n<h4>Comment apprendre un équipement</h4>\n<ul>\n<li><strong>Le mode apprentissage</strong> est mis automatiquement pour <strong>60s</strong> au démarrage de Gladys</li>\n<li>Pour mettre le mode manuellement, allez dans la vue <strong>Modules</strong> et cliquez sur le boutton <strong>Configuration</strong> de la ligne du module EnOcean, cela va mettre le dongle en apprentissage pour 60s.</li>\n<li>Vous pouvez également apprende manuellement des équipements en passant par un script :</li>\n</ul>\n<pre><code class=\"language-sh\">$ gladys.modules.enocean.learn({\n   id: \"your device id\",\n   eep: \"your device eep\",\n   manufacturer: \"manufacturer- not mandatory\",\n   desc: \"the name you want to give for your device\"\n})</code></pre>\n<ul>\n<li>\n<p>Vous pouvez également <strong>désapprendre</strong> un équipement par script:</p>\n<pre><code class=\"language-sh\">$ gladys.modules.enocean.forget(\"your device id\")</code></pre>\n</li>\n</ul>\n<h4>Comment cela marche</h4>\n<ul>\n<li>\n<p>Les états de chaque équipement sont mappés à une valeur entière dans Gladys (comme Gladys travail avec des entiers).<br />\nopen : 1<br />\nclosed : 0<br />\non : 1<br />\noff : 0<br />\nA0 : 1<br />\nA1 : 2<br />\nB0 : 3<br />\nB1 : 4<br />\nreleased : 5</p>\n</li>\n<li>Equipements actuellements supportés:<br />\na5-07-01<br />\na5-02-05<br />\nd5-00-01<br />\nf6-02-03<br />\nd2-xx-xx (partiellement)</li>\n</ul>\n<p>D'autres équipements devraient marcher. Le module se base sur node-enocean qui supporte beaucoup d'EEP.<br />\nJe n'ai testé qu'avec mes équipements.</p>\n<p>Si vous avez de équipements différents qui ne marchent pas, ouvrez un bug sur Github afin qu'on travail à intégrer leur supports.</p>\n<h4>Pour utiliser un boitier comme celui la:</h4>\n<p>http://nodon.fr/enocean/module-encastre-enocean-1-canal_16-1</p>\n<ul>\n<li>Vous devez appairer le boitier à Gladys afin de le controller (apprentissage double):\n<ul>\n<li>Apprenez l'équipement dans Gladys  <strong>(apprendre l'équipement dans Gladys)</strong></li>\n<li>Mettez l'équipement en mode apprentissage (selon la procédure spéficique de l'équipement)</li>\n<li>Envoyez depuis Gladys un ordre d'allumage afin de l'appairer à Gladys <strong>(réalise un appairage entre Gladys et l'équipement)</strong></li>\n</ul></li>\n</ul>\n<pre><code class=\"language-sh\">$ gladys.deviceType.exec({\n   id: \"your device id\",\n   value: 1 // means A0\n})</code></pre>\n<p>Attention à bien envoyer un ordre d'allumage (1 = A0) et pas d'extinction (2 = A1) sinon l'apprentissage sera inversé (pas très grave si ce n'est que la logique sera inverse du coup)</p>","instructionsMarkDown":"## Installation\n\n- Brancher votre clé USB EnOcean (TCM300) sur votre Raspberry Pi\n- Trouver le périphérique en question sur votre distribution linux (cela doit être du type `/dev/ttyACM0`, vous pouvez le renommer via les règles udev). \nEssayez de lancer la commande suivante `ls /dev/tty*` avant de le brancher, puis après l'avoir branché et vous devriez voir le périphérique apparaitre.\n- Créez un parametre dans Gladys en allant dans \"Parametres\" => \"Parametres\" : \n  **Clé** : enocean_usb_port \n  **Valeur** : NOM_DU_PORT_TROUVE \n\n- Installer le module dans Gladys par le store.\n- Reboot Gladys\n\n\n## Usage\n\n#### Comment apprendre un équipement\n-  **Le mode apprentissage** est mis automatiquement pour **60s** au démarrage de Gladys\n-  Pour mettre le mode manuellement, allez dans la vue **Modules** et cliquez sur le boutton **Configuration** de la ligne du module EnOcean, cela va mettre le dongle en apprentissage pour 60s.\n- Vous pouvez également apprende manuellement des équipements en passant par un script :\n\n```sh\n$ gladys.modules.enocean.learn({\n   id: \"your device id\",\n   eep: \"your device eep\",\n   manufacturer: \"manufacturer- not mandatory\",\n   desc: \"the name you want to give for your device\"\n})\n```\n\n- Vous pouvez également **désapprendre** un équipement par script:\n\n ```sh\n$ gladys.modules.enocean.forget(\"your device id\")\n```\n\n#### Comment cela marche\n\n- Les états de chaque équipement sont mappés à une valeur entière dans Gladys (comme Gladys travail avec des entiers).\n  open : 1\n  closed : 0\n  on : 1\n  off : 0\n  A0 : 1\n  A1 : 2\n  B0 : 3\n  B1 : 4\n  released : 5\n\n- Equipements actuellements supportés:\n  a5-07-01\n  a5-02-05\n  d5-00-01\n  f6-02-03\n  d2-xx-xx (partiellement)\n\nD'autres équipements devraient marcher. Le module se base sur node-enocean qui supporte beaucoup d'EEP.\nJe n'ai testé qu'avec mes équipements.\n\nSi vous avez de équipements différents qui ne marchent pas, ouvrez un bug sur Github afin qu'on travail à intégrer leur supports.\n\n#### Pour utiliser un boitier comme celui la:\nhttp://nodon.fr/enocean/module-encastre-enocean-1-canal_16-1\n\n - Vous devez appairer le boitier à Gladys afin de le controller (apprentissage double):\n   - Apprenez l'équipement dans Gladys  __(apprendre l'équipement dans Gladys)__\n   - Mettez l'équipement en mode apprentissage (selon la procédure spéficique de l'équipement)\n   - Envoyez depuis Gladys un ordre d'allumage afin de l'appairer à Gladys __(réalise un appairage entre Gladys et l'équipement)__\n\n```sh\n$ gladys.deviceType.exec({\n   id: \"your device id\",\n   value: 1 // means A0\n})\n```\nAttention à bien envoyer un ordre d'allumage (1 = A0) et pas d'extinction (2 = A1) sinon l'apprentissage sera inversé (pas très grave si ce n'est que la logique sera inverse du coup)","link":"https://github.com/jean-philipped/gladys-enocean","img":"1cf3a3bf-eee2-4c30-bcc9-7853b3e5aad5.jpg","note":null,"nbNotes":"0"}
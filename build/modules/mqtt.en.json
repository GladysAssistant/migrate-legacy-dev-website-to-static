{"idModule":"58","name":"MQTT","description":"This module allows you to connect to an MQTT broker. This enable to use OwnTracks to track your location. ","slug":"mqtt","createdAt":"2016-06-03 16:01:23","Developer":"Admin","version":"0.1.0","instructionsHTML":"<p>This module connect Gladys to a MQTT broker, in order to support <a href=\"http://owntracks.org/\">Owntrack</a>, an open-source (and awesome) location tracker.</p>\r\n<p>Need Gladys version &gt;= 3.0.0.</p>\r\n<h2>Documentation</h2>\r\n<p>To make this module work in Gladys, you need to :</p>\r\n<ul>\r\n<li>First, install the module</li>\r\n<li>Without rebooting, just set three global parameters in &quot;Param&quot; view in the dashboard : \r\n<ul>\r\n<li>MQTT_URL =&gt; The URL of the MQTT broker, for example : &quot;mqtt://xxxx.cloudmqtt.com:19692&quot;</li>\r\n<li>MQTT_USERNAME =&gt; The username to connect to the MQTT broker</li>\r\n<li>MQTT_PASSWORD =&gt; The password of the MQTT user</li>\r\n</ul></li>\r\n<li>Reboot Gladys. In the logs you should see &quot;Successfully connected to MQTT : YOUR_SERVER_URL&quot; </li>\r\n</ul>\r\n<p>This should looks like this : </p>\r\n<p><img src=\"http://gladysproject.com/assets/images/external/gladys-param-mqtt-screenshot.jpg\" alt=\"Gladys parameters\" class=\"img-responsive\" /></p>\r\n<h2>Set up a MQTT broker</h2>\r\n<p>To set up your MQTT broker, you have two options :</p>\r\n<ul>\r\n<li>Install your own MQTT on your server or your Raspberry Pi</li>\r\n<li>Use a third-party MQTT Cloud </li>\r\n</ul>\r\n<p>To test this module in Gladys, I used <a href=\"https://www.cloudmqtt.com/\">CloudMQTT</a>, the service is free up to 10 connections, so that's fine to test.</p>\r\n<h3>CloudMQTT</h3>\r\n<p>If you want to use CloudMQTT, just create an account, confirm your email, then create an instance. </p>\r\n<p>This should looks like this : </p>\r\n<p><img src=\"http://gladysproject.com/assets/images/external/cloud-mqtt-screenshot.jpg\" alt=\"Cloud MQTT\" class=\"img-responsive\" /></p>\r\n<p>You could now fill this infos in Gladys.</p>\r\n<ul>\r\n<li>MQTT_URL = mqtt://xxxx.cloudmqtt.com:PORT</li>\r\n<li>MQTT_USERNAME = User in info panel</li>\r\n<li>MQTT_PASSWORD = Password in info panel</li>\r\n</ul>\r\n<h2>Owntrack</h2>\r\n<p>To play with owntrack to save your location in Gladys, you need to install the <a href=\"https://itunes.apple.com/us/app/mqttitude/id692424691?mt=8\">iOS</a> or <a href=\"https://play.google.com/store/apps/details?id=org.owntracks.android\">Android</a> app.</p>\r\n<p>In <code>Preferences</code>, go to <code>Connection</code>:</p>\r\n<ul>\r\n<li><code>Mode</code> =&gt; &quot;Private MQTT&quot;,</li>\r\n<li><code>Host</code> =&gt; \r\n<ul>\r\n<li><code>Host</code> = xxxx.cloudmqtt.com</li>\r\n<li><code>Port</code> = SSL PORT (be careful, that's not the same port as before)</li>\r\n</ul></li>\r\n<li><code>Identification</code> =&gt; \r\n<ul>\r\n<li><code>Username</code> =&gt; MQTTT username</li>\r\n<li><code>Password</code> =&gt; MQTT Password</li>\r\n<li><code>Device ID</code> =&gt; &quot;whatever you want, name of your phone for example&quot;</li>\r\n<li><code>Tracker ID</code> =&gt; Your UserID in Gladys (very important !), or the UserID you want to track</li>\r\n</ul></li>\r\n</ul>\r\n<p>Then save, and you should see the message &quot;Connected&quot;.</p>","instructionsMarkDown":"This module connect Gladys to a MQTT broker, in order to support [Owntrack](http://owntracks.org/), an open-source (and awesome) location tracker.\n\nNeed Gladys version >= 3.0.0.\n\n## Documentation\n\nTo make this module work in Gladys, you need to :\n\n- First, install the module\n- Without rebooting, just set three global parameters in \"Param\" view in the dashboard : \n\t- MQTT_URL => The URL of the MQTT broker, for example : \"mqtt://xxxx.cloudmqtt.com:19692\"\n\t- MQTT_USERNAME\t=> The username to connect to the MQTT broker\n\t- MQTT_PASSWORD => The password of the MQTT user\n- Reboot Gladys. In the logs you should see \"Successfully connected to MQTT : YOUR_SERVER_URL\" \n\nThis should looks like this : \n\n![Gladys parameters](http://gladysproject.com/assets/images/external/gladys-param-mqtt-screenshot.jpg)\n\n## Set up a MQTT broker\n\nTo set up your MQTT broker, you have two options :\n- Install your own MQTT on your server or your Raspberry Pi\n- Use a third-party MQTT Cloud \n\nTo test this module in Gladys, I used [CloudMQTT](https://www.cloudmqtt.com/), the service is free up to 10 connections, so that's fine to test.\n\n### CloudMQTT\n\nIf you want to use CloudMQTT, just create an account, confirm your email, then create an instance. \n\nThis should looks like this : \n\n![Cloud MQTT](http://gladysproject.com/assets/images/external/cloud-mqtt-screenshot.jpg)\n\nYou could now fill this infos in Gladys.\n\n- MQTT_URL = mqtt://xxxx.cloudmqtt.com:PORT\n- MQTT_USERNAME = User in info panel\n- MQTT_PASSWORD = Password in info panel\n\n\n## Owntrack\n\nTo play with owntrack to save your location in Gladys, you need to install the [iOS](https://itunes.apple.com/us/app/mqttitude/id692424691?mt=8) or [Android](https://play.google.com/store/apps/details?id=org.owntracks.android) app.\n\nIn `Preferences`, go to `Connection`:\n\n- `Mode` => \"Private MQTT\",\n- `Host` => \n\t- `Host` = xxxx.cloudmqtt.com\n\t- `Port` = SSL PORT (be careful, that's not the same port as before)\n- `Identification` => \n\t- `Username` => MQTTT username\n\t- `Password` => MQTT Password\n\t- `Device ID` => \"whatever you want, name of your phone for example\"\n\t- `Tracker ID` => Your UserID in Gladys (very important !), or the UserID you want to track\n\nThen save, and you should see the message \"Connected\".","link":"https://github.com/gladysassistant/gladys-mqtt","img":"86fd1c06-ba7f-484f-b692-c770d2457f21.jpg","note":null,"nbNotes":"0"}
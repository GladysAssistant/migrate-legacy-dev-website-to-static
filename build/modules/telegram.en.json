{"idModule":"80","name":"Telegram","description":"This module allows you to talk to Gladys on Telegram Messenger App! Send a message at any time to Gladys.","slug":"telegram","createdAt":"2017-05-03 22:49:53","Developer":"Admin","version":"0.1.0","instructionsHTML":"<h4>Requirements</h4>\n<ul>\n<li>You need Gladys &gt;= 3.5.</li>\n</ul>\n<h4>Setup</h4>\n<ul>\n<li>Create a bot on Telegram by talking to the <a href=\"https://telegram.me/BotFather\">@botfather</a>. Say &quot;/start&quot; to the<br />\nbotfather to know what to do.</li>\n<li>Create a bot using the &quot;/newbot&quot; command in the @botfather conversation. Keep the API_KEY he gave you.</li>\n<li>Install the gladys-telegram module in Gladys. Do not reboot for the moment!</li>\n<li>In your Gladys dashboard go to &quot;Parameters&quot; =&gt; &quot;Parameters&quot;. Create two Gladys parameters: <code>TELEGRAM_API_KEY</code> =&gt; your Telegram API key, and <code>TELEGRAM_WEBHOOK_URL</code> =&gt; <code>POLLING</code>. If your Gladys instance is accessible from the outside and you want to use webhooks (faster than polling), you can replace <code>POLLING</code> by <code>https://YOUR_GLADYS_IP_OR_DOMAIN/telegram</code></li>\n<li>Reboot Gladys</li>\n<li>Talk to your bot you created.</li>\n<li>Open Gladys logs (<code>pm2 logs gladys</code> on a Raspberry Pi), you should see:<br />\ndebug: Telegram : Received message on chat ID = XXXXXXXXX, from = &quot;Pierre-Gilles Leymarie&quot; with content = &quot;Hey !&quot;</li>\n<li>Copy the chat ID and create two Gladys parameters <code>TELEGRAM_CHAT_ID_yourChatId_USER</code> = <code>your user ID in Gladys</code>, and <code>TELEGRAM_USER_yourUserIdInGladys_CHAT_ID</code> = <code>CHAT_ID</code>. This will help Gladys know that this Telegram conversation is your user in Gladys, and that to contact you she will need to talk in this conversation (to speak in both way).</li>\n<li>You can know talk to Gladys!</li>\n</ul>","instructionsMarkDown":"#### Requirements\n\n- You need Gladys >= 3.5.\n\n#### Setup\n\n- Create a bot on Telegram by talking to the [@botfather](https://telegram.me/BotFather). Say \"/start\" to the\nbotfather to know what to do.\n- Create a bot using the \"/newbot\" command in the @botfather conversation. Keep the API_KEY he gave you.\n- Install the gladys-telegram module in Gladys. Do not reboot for the moment!\n- In your Gladys dashboard go to \"Parameters\" => \"Parameters\". Create two Gladys parameters: `TELEGRAM_API_KEY` => your Telegram API key, and `TELEGRAM_WEBHOOK_URL` => `POLLING`. If your Gladys instance is accessible from the outside and you want to use webhooks (faster than polling), you can replace `POLLING` by `https://YOUR_GLADYS_IP_OR_DOMAIN/telegram`\n- Reboot Gladys\n- Talk to your bot you created.\n- Open Gladys logs (`pm2 logs gladys` on a Raspberry Pi), you should see:\ndebug: Telegram : Received message on chat ID = XXXXXXXXX, from = \"Pierre-Gilles Leymarie\" with content = \"Hey !\"\n- Copy the chat ID and create two Gladys parameters `TELEGRAM_CHAT_ID_yourChatId_USER` = `your user ID in Gladys`, and `TELEGRAM_USER_yourUserIdInGladys_CHAT_ID` = `CHAT_ID`. This will help Gladys know that this Telegram conversation is your user in Gladys, and that to contact you she will need to talk in this conversation (to speak in both way).\n- You can know talk to Gladys!","link":"https://github.com/gladysassistant/gladys-telegram","img":"054f22f8-08bf-410e-98bc-e365f7fcb659.jpg","note":null,"nbNotes":"0"}